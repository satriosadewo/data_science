## MULTIPLE LINEAR REGRESSION WITH FEATURE SCALING (STANDARDIZATION) & THE PREDICTION
Case Study : Investigating the influence of the size and the year of property on the price

## 1. Import the Relevant Libraries
import pandas as pd
import numpy as np
import seaborn as sns
sns.set()
from sklearn.linear_model import LinearRegression

## 2. Load the Data
data=pd.read_csv('real_estate_price_size_year.csv')
data.head()

data.describe()

## 3. Create the Regression
  ## a. Declare the Dependent & the Independent Variables
y=data['price']
x=data[['size',"year"]]
  ## b. Standardization
from sklearn.preprocessing import StandardScaler
scaler=StandardScaler()
scaler.fit(x)
x_scaled=scaler.transform(x)
x_scaled

## 4. Regression with Scaled Features
reg=LinearRegression()
reg.fit(x_scaled,y)

## 5. Calculate the Coefficient
reg.coef_

## 6. Calculate the Intercept
reg.intercept_

## 7. Calculating the R-Squared
reg.score(x_scaled,y)

## 8. Creating a Summary Table
reg_summary=pd.DataFrame([['Bias'],['size'],['year']],columns=['Features'])
reg_summary['Weights']=reg.intercept_,reg.coef_[0],reg.coef_[1]
reg_summary

## 9. Making Prediction with the Standardized Coefficients (Weights)
new_data=pd.DataFrame(data=[[300,1994],[350,1993]],columns=['size','year']
new_data

new_data_scaled = scaler.transform(new_data)
new_data_scaled

reg.predict(new_data_scaled)


*note:
If the data are standardized, so the value for being predicted should be standardized too.
